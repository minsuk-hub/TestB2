/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package urlconnect;

import javax.json.Json;
import java.net.HttpURLConnection;
import java.net.URL;
import java.io.IOException;
import java.util.Base64;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.nio.charset.Charset;
import javax.json.JsonObject;
import java.io.StringReader;


public class App {

  private static String appKeyId = "005e6f0ff38588b0000000009";
  private static String appKey = "K005XCpRP+hm5xAupUxYI3xA0D8QwoQ";
  
    public static void main(String[] args) {
      try {
        URL url = new URL("https://api.backblazeb2.com" + "/b2api/v2/" + "b2_authorize_account");
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            String encodedAuth = encodeAuthorization(appKeyId + ":" + appKey);
            connection.setRequestProperty("Authorization", encodedAuth);
            connection.setConnectTimeout(5000);   
            connection.setReadTimeout(1000);
      try {
    try (InputStream inputStream = connection.getInputStream()) {
        String respStr = readInputStream(inputStream);
        JsonObject response = Json.createReader(new StringReader(respStr)).readObject();
        
        String authToken = response.getString("authorizationToken");
        // String apiUrl = response.getString("apiUrl");
        // String accountId = response.getString("accountId");
        String downloadUrl = response.getString("downloadUrl");
        
        
        System.out.println("Download URL: " + downloadUrl);
        System.out.println("Authentication Token: " + authToken);
    }
} 

  finally {
    connection.disconnect();
  }
      } catch (Exception e) {
        System.out.println("에러: " + e.getMessage());
      }
      
  }

  private static String encodeAuthorization(String input){
        byte[] authorizationBytes = input.getBytes(StandardCharsets.UTF_8);
        String encodedAuthorization = Base64.getEncoder().encodeToString(authorizationBytes);
        return "Basic " + encodedAuthorization;
    }
    
      public static String readInputStream(InputStream inputStream) {
        StringBuilder stringBuilder = new StringBuilder();
        String line;

        try (BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream, Charset.forName("utf-8")))) {
            while (true) {
                line = reader.readLine();
                if (line == null) break;
                stringBuilder.append(line);
            }
        } catch (IOException e) {
            // Handle IOException as needed
            System.out.println("에러: " + e.getMessage());
        }

        return stringBuilder.toString();
    }
    
    // private static void downloadFile(String URL, String authorization, B2File file, File destination)  {
    //     try {
    //         URL url = new URL(URL + "/b2api/v3/b2_download_file_by_id");
    //         HttpsURLConnection connection = (HttpsURLConnection) url.openConnection();
    //         connection.setRequestMethod("POST");
    //         connection.setRequestProperty("User-Agent", USER_AGENT);
    //         connection.setRequestProperty("Authorization", authorization);

    //         connection.setDoOutput(true);
    //         DataOutputStream outputStream = new DataOutputStream(connection.getOutputStream());
    //         outputStream.writeBytes(new JSONObject().put("fileId", file.getID()).toString());
    //         outputStream.flush();
    //         outputStream.close();

    //         if(connection.getResponseCode() < 400){
    //             InputStream inputStream =  connection.getInputStream();
    //             OutputStream fileOutputStream = new FileOutputStream(destination);

    //             int read = 0;
    //             byte[] bytes = new byte[1024];

    //             while ((read = inputStream.read(bytes)) != -1) {
    //                 fileOutputStream.write(bytes, 0, read);
    //             }
    //             fileOutputStream.close();
    //             connection.disconnect();
    //         }else{
    //             InputStream errorStream =  connection.getErrorStream();
    //             JSONObject requestResult = inputToJSON(errorStream);

    //             B2APIException exception = new B2APIException(requestResult.getString("message"));
    //             exception.setStatusCode(requestResult.getInt("status"));
    //             exception.setIdentifier(requestResult.getString("code"));
    //             throw exception;
    //         }

    //     } catch (IOException ignored) {}
    // }
}

